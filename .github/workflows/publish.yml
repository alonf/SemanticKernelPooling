name: Build and Publish NuGet Packages

on:
  workflow_dispatch:
    inputs:
      package_version:
        description: 'Package version'
        required: false
  release:
    types: [published]

jobs:
  build-main-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
        
      - name: Determine Package Version
        id: get-version
        run: |
            if [ "${{ github.event.release.tag_name }}" ]; then
                echo "package_version=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
            else
                echo "package_version=${{ github.event.inputs.package_version }}" >> $GITHUB_OUTPUT
            fi
            pwd

      - name: Restore dependencies for the main package
        run: dotnet restore ./SemanticKernelPooling/SemanticKernelPooling.csproj

      - name: Build main package
        run: dotnet build ./SemanticKernelPooling/SemanticKernelPooling.csproj --configuration Release

      - name: Pack main package
        run: dotnet pack -c Release -p:PackageVersion=${{ steps.get-version.outputs.package_version }} /p:PackageReleaseNotes="See https://raw.githubusercontent.com/alonf/SemanticKernelPooling/master/README.md" ./SemanticKernelPooling/SemanticKernelPooling.csproj --output ./nupkgs

      - name: Publish main package
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./nupkgs/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

      - name: Wait for 3-5 minutes
        run: sleep 240

  build-other-packages:
    runs-on: ubuntu-latest
    needs: build-main-package
    strategy:
      matrix:
        package-path: [
          './SemanticKernelPooling.Google/SemanticKernelPooling.Google.csproj',
          './SemanticKernelPooling.HuggingFace/SemanticKernelPooling.HuggingFace.csproj',
          './SemanticKernelPooling.MistralAI/SemanticKernelPooling.MistralAI.csproj',
          './SemanticKernelPooling.OpenAI/SemanticKernelPooling.OpenAI.csproj'
        ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ${{ matrix.package-path }}

      - name: Build package
        run: dotnet build ${{ matrix.package-path }} --configuration Release

      - name: Pack package
        run: dotnet pack ${{ matrix.package-path }} --configuration Release -p:PackageVersion=${{ needs.build-main-package.outputs.get-version.package_version }} --output ./nupkgs

      - name: Publish package
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./nupkgs/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
